{"ast":null,"code":"var _jsxFileName = \"/home/olakoziou/Pulpit/Code/krzys2/frontend/src/components/testimonials/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { breakpoints } from '../../styles';\nimport Slider2 from 'infinite-react-carousel';\nimport Item from './Item';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SM, XSM, MD, LG, XL } from '../../constans';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderBox = styled.div`\n  max-width: 100%;\n  height: min-content;\n  margin: 0 auto;\n  padding: 20px 0;\n  position: relative;\n  overflow-x: hidden;\n\n  @media ${breakpoints().xsm} {\n    max-width: 90%;\n  }\n\n  .slider {\n    padding: 100px 0 50px;\n    .carousel-initialized {\n      overflow: unset;\n      .carousel-track {\n        > .carousel-item {\n        }\n      }\n    }\n    .carousel-dots {\n      button {\n        &::before {\n          font-size: 24px;\n          line-height: 50px;\n        }\n      }\n    }\n  }\n`;\n_c = SliderBox;\n\nfunction Slider({\n  data\n}) {\n  _s();\n\n  const [state, setState] = useState(window.innerWidth);\n\n  function getWindowDimensions() {\n    const {\n      innerWidth: width\n    } = window;\n    return width;\n  }\n\n  const checkWidth = () => {\n    if (state <= MD) {\n      return 1;\n    } else if (state >= MD && state <= XL) {\n      return 2;\n    } else {\n      return 3;\n    }\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setState(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SliderBox, {\n    children: /*#__PURE__*/_jsxDEV(Slider2, {\n      dots: true,\n      slidesToShow: checkWidth(),\n      autoplay: false,\n      arrows: false,\n      autoplaySpeed: 8000,\n      className: \"slider\",\n      children: data && data.map(el => /*#__PURE__*/_jsxDEV(Item, {\n        data: el\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"vEgGXKQ4adzispxJA1Vaal74vow=\");\n\n_c2 = Slider;\nexport default Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderBox\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["/home/olakoziou/Pulpit/Code/krzys2/frontend/src/components/testimonials/Slider.js"],"names":["React","useEffect","useState","styled","breakpoints","Slider2","Item","v4","uuidv4","SM","XSM","MD","LG","XL","SliderBox","div","xsm","Slider","data","state","setState","window","innerWidth","getWindowDimensions","width","checkWidth","handleResize","addEventListener","removeEventListener","map","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,EAAT,EAAaC,GAAb,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,QAAoC,gBAApC;;AAEA,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWX,WAAW,GAAGY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;KAAMF,S;;AAgCN,SAASG,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACmB,MAAM,CAACC,UAAR,CAAlC;;AAEA,WAASC,mBAAT,GAA+B;AAC7B,UAAM;AAAED,MAAAA,UAAU,EAAEE;AAAd,QAAwBH,MAA9B;AACA,WAAOG,KAAP;AACD;;AAED,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIN,KAAK,IAAIR,EAAb,EAAiB;AACf,aAAO,CAAP;AACD,KAFD,MAEO,IAAIQ,KAAK,IAAIR,EAAT,IAAeQ,KAAK,IAAIN,EAA5B,EAAgC;AACrC,aAAO,CAAP;AACD,KAFM,MAEA;AACL,aAAO,CAAP;AACD;AACF,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,aAASyB,YAAT,GAAwB;AACtBN,MAAAA,QAAQ,CAACG,mBAAmB,EAApB,CAAR;AACD;;AAEDF,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AAEA,WAAO,MAAML,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,YAAY,EAAED,UAAU,EAF1B;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,MAAM,EAAE,KAJV;AAKE,MAAA,aAAa,EAAE,IALjB;AAME,MAAA,SAAS,EAAC,QANZ;AAAA,gBAQGP,IAAI,IAAIA,IAAI,CAACW,GAAL,CAAUC,EAAD,iBAAQ,QAAC,IAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAWtB,MAAM,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAjB;AARX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA1CQS,M;;MAAAA,M;AA4CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { breakpoints } from '../../styles';\nimport Slider2 from 'infinite-react-carousel';\nimport Item from './Item';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SM, XSM, MD, LG, XL } from '../../constans';\n\nconst SliderBox = styled.div`\n  max-width: 100%;\n  height: min-content;\n  margin: 0 auto;\n  padding: 20px 0;\n  position: relative;\n  overflow-x: hidden;\n\n  @media ${breakpoints().xsm} {\n    max-width: 90%;\n  }\n\n  .slider {\n    padding: 100px 0 50px;\n    .carousel-initialized {\n      overflow: unset;\n      .carousel-track {\n        > .carousel-item {\n        }\n      }\n    }\n    .carousel-dots {\n      button {\n        &::before {\n          font-size: 24px;\n          line-height: 50px;\n        }\n      }\n    }\n  }\n`;\n\nfunction Slider({ data }) {\n  const [state, setState] = useState(window.innerWidth);\n\n  function getWindowDimensions() {\n    const { innerWidth: width } = window;\n    return width;\n  }\n\n  const checkWidth = () => {\n    if (state <= MD) {\n      return 1;\n    } else if (state >= MD && state <= XL) {\n      return 2;\n    } else {\n      return 3;\n    }\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setState(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <SliderBox>\n      <Slider2\n        dots\n        slidesToShow={checkWidth()}\n        autoplay={false}\n        arrows={false}\n        autoplaySpeed={8000}\n        className=\"slider\"\n      >\n        {data && data.map((el) => <Item key={uuidv4()} data={el} />)}\n      </Slider2>\n    </SliderBox>\n  );\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}