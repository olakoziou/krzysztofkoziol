{"ast":null,"code":"// eslint-disable-next-line\nimport Swiper from '../../core';\nimport { isObject, extend } from './utils';\nimport { paramsList } from './params-list';\n\nfunction getParams(obj) {\n  if (obj === void 0) {\n    obj = {};\n  }\n\n  var params = {\n    _emitClasses: true,\n    on: {}\n  };\n  var passedParams = {};\n  extend(params, Swiper.defaults);\n  extend(params, Swiper.extendedDefaults);\n  var rest = {};\n  var allowedParams = paramsList.map(function (key) {\n    return key.replace(/_/, '');\n  });\n  Object.keys(obj).forEach(function (key) {\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      params.on[\"\" + key[2].toLowerCase() + key.substr(3)] = obj[key];\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  return {\n    params: params,\n    passedParams: passedParams,\n    rest: rest\n  };\n}\n\nexport { getParams };","map":{"version":3,"sources":["/home/olakoziou/Pulpit/Code/krzys2/frontend/node_modules/swiper/esm/react/get-params.js"],"names":["Swiper","isObject","extend","paramsList","getParams","obj","params","_emitClasses","on","passedParams","defaults","extendedDefaults","rest","allowedParams","map","key","replace","Object","keys","forEach","indexOf","search","toLowerCase","substr"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,YAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,SAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAG,EAAN;AACD;;AAED,MAAIC,MAAM,GAAG;AACXC,IAAAA,YAAY,EAAE,IADH;AAEXC,IAAAA,EAAE,EAAE;AAFO,GAAb;AAIA,MAAIC,YAAY,GAAG,EAAnB;AACAP,EAAAA,MAAM,CAACI,MAAD,EAASN,MAAM,CAACU,QAAhB,CAAN;AACAR,EAAAA,MAAM,CAACI,MAAD,EAASN,MAAM,CAACW,gBAAhB,CAAN;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,aAAa,GAAGV,UAAU,CAACW,GAAX,CAAe,UAAUC,GAAV,EAAe;AAChD,WAAOA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAP;AACD,GAFmB,CAApB;AAGAC,EAAAA,MAAM,CAACC,IAAP,CAAYb,GAAZ,EAAiBc,OAAjB,CAAyB,UAAUJ,GAAV,EAAe;AACtC,QAAIF,aAAa,CAACO,OAAd,CAAsBL,GAAtB,KAA8B,CAAlC,EAAqC;AACnC,UAAId,QAAQ,CAACI,GAAG,CAACU,GAAD,CAAJ,CAAZ,EAAwB;AACtBT,QAAAA,MAAM,CAACS,GAAD,CAAN,GAAc,EAAd;AACAN,QAAAA,YAAY,CAACM,GAAD,CAAZ,GAAoB,EAApB;AACAb,QAAAA,MAAM,CAACI,MAAM,CAACS,GAAD,CAAP,EAAcV,GAAG,CAACU,GAAD,CAAjB,CAAN;AACAb,QAAAA,MAAM,CAACO,YAAY,CAACM,GAAD,CAAb,EAAoBV,GAAG,CAACU,GAAD,CAAvB,CAAN;AACD,OALD,MAKO;AACLT,QAAAA,MAAM,CAACS,GAAD,CAAN,GAAcV,GAAG,CAACU,GAAD,CAAjB;AACAN,QAAAA,YAAY,CAACM,GAAD,CAAZ,GAAoBV,GAAG,CAACU,GAAD,CAAvB;AACD;AACF,KAVD,MAUO,IAAIA,GAAG,CAACM,MAAJ,CAAW,SAAX,MAA0B,CAA1B,IAA+B,OAAOhB,GAAG,CAACU,GAAD,CAAV,KAAoB,UAAvD,EAAmE;AACxET,MAAAA,MAAM,CAACE,EAAP,CAAU,KAAKO,GAAG,CAAC,CAAD,CAAH,CAAOO,WAAP,EAAL,GAA4BP,GAAG,CAACQ,MAAJ,CAAW,CAAX,CAAtC,IAAuDlB,GAAG,CAACU,GAAD,CAA1D;AACD,KAFM,MAEA;AACLH,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYV,GAAG,CAACU,GAAD,CAAf;AACD;AACF,GAhBD;AAiBA,SAAO;AACLT,IAAAA,MAAM,EAAEA,MADH;AAELG,IAAAA,YAAY,EAAEA,YAFT;AAGLG,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AAED,SAASR,SAAT","sourcesContent":["// eslint-disable-next-line\nimport Swiper from '../../core';\nimport { isObject, extend } from './utils';\nimport { paramsList } from './params-list';\n\nfunction getParams(obj) {\n  if (obj === void 0) {\n    obj = {};\n  }\n\n  var params = {\n    _emitClasses: true,\n    on: {}\n  };\n  var passedParams = {};\n  extend(params, Swiper.defaults);\n  extend(params, Swiper.extendedDefaults);\n  var rest = {};\n  var allowedParams = paramsList.map(function (key) {\n    return key.replace(/_/, '');\n  });\n  Object.keys(obj).forEach(function (key) {\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      params.on[\"\" + key[2].toLowerCase() + key.substr(3)] = obj[key];\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  return {\n    params: params,\n    passedParams: passedParams,\n    rest: rest\n  };\n}\n\nexport { getParams };"]},"metadata":{},"sourceType":"module"}