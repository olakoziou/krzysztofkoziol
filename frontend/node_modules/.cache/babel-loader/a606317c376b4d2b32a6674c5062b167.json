{"ast":null,"code":"import{breakpointsValues}from'./constans';export var colors=function colors(){var alpha=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{navy1:\"rgba(15, 32, 39, \".concat(alpha,\")\"),navy2:\"rgba(32, 58, 67, \".concat(alpha,\")\"),navy3:\"rgba(44, 83, 100, \".concat(alpha,\")\"),orange:\"rgba(246, 147, 5, \".concat(alpha,\")\"),violet:\"rgba(98, 85, 151, \".concat(alpha,\")\"),grey:\"rgba(242, 240, 248, \".concat(alpha,\")\"),darkGrey:\"rgba(15, 15, 15, \".concat(alpha,\")\")};};// export const breakpoints = (bp) => {\n//   if (bp === 'xsm') {\n//     return `(min-width: 350px)`;\n//   } else if (bp === 'sm') {\n//     return `(min-width: 600px)`;\n//   } else if (bp === 'md') {\n//     return `(min-width: 960px)`;\n//   } else if (bp === 'lg') {\n//     return `(min-width: 1280px)`;\n//   } else if (bp === 'xl') {\n//     return `(min-width: 1920px)`;\n//   }\n// };\nexport var breakpoints=function breakpoints(bp){// if (bp === 'xsm') {\n//   return `(min-width: 350px)`;\n// } else if (bp === 'sm') {\n//   return `(min-width: 600px)`;\n// } else if (bp === 'md') {\n//   return `(min-width: 960px)`;\n// } else if (bp === 'lg') {\n//   return `(min-width: 1280px)`;\n// } else if (bp === 'xl') {\n//   return `(min-width: 1920px)`;\n// }\nreturn{xsm:\"(min-width: \".concat(breakpointsValues().XSM,\"px)\"),sm:\"(min-width: \".concat(breakpointsValues().SM,\"px)\"),md:\"(min-width: \".concat(breakpointsValues().MD,\"px)\"),lg:\"(min-width: \".concat(breakpointsValues().LG,\"px)\"),xl:\"(min-width: \".concat(breakpointsValues().XL,\"px)\")};};","map":{"version":3,"sources":["/home/olakoziou/Pulpit/Code/krzys2/frontend/src/styles.js"],"names":["breakpointsValues","colors","alpha","navy1","navy2","navy3","orange","violet","grey","darkGrey","breakpoints","bp","xsm","XSM","sm","SM","md","MD","lg","LG","xl","XL"],"mappings":"AAAA,OAASA,iBAAT,KAAkC,YAAlC,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAe,IAAdC,CAAAA,KAAc,2DAAN,CAAM,CACnC,MAAO,CACLC,KAAK,4BAAsBD,KAAtB,KADA,CAELE,KAAK,4BAAsBF,KAAtB,KAFA,CAGLG,KAAK,6BAAuBH,KAAvB,KAHA,CAILI,MAAM,6BAAuBJ,KAAvB,KAJD,CAKLK,MAAM,6BAAuBL,KAAvB,KALD,CAMLM,IAAI,+BAAyBN,KAAzB,KANC,CAOLO,QAAQ,4BAAsBP,KAAtB,KAPH,CAAP,CASD,CAVM,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAQ,CACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,CACLC,GAAG,uBAAiBZ,iBAAiB,GAAGa,GAArC,OADE,CAELC,EAAE,uBAAiBd,iBAAiB,GAAGe,EAArC,OAFG,CAGLC,EAAE,uBAAiBhB,iBAAiB,GAAGiB,EAArC,OAHG,CAILC,EAAE,uBAAiBlB,iBAAiB,GAAGmB,EAArC,OAJG,CAKLC,EAAE,uBAAiBpB,iBAAiB,GAAGqB,EAArC,OALG,CAAP,CAOD,CApBM","sourcesContent":["import { breakpointsValues } from './constans';\n\nexport const colors = (alpha = 1) => {\n  return {\n    navy1: `rgba(15, 32, 39, ${alpha})`,\n    navy2: `rgba(32, 58, 67, ${alpha})`,\n    navy3: `rgba(44, 83, 100, ${alpha})`,\n    orange: `rgba(246, 147, 5, ${alpha})`,\n    violet: `rgba(98, 85, 151, ${alpha})`,\n    grey: `rgba(242, 240, 248, ${alpha})`,\n    darkGrey: `rgba(15, 15, 15, ${alpha})`,\n  };\n};\n\n// export const breakpoints = (bp) => {\n//   if (bp === 'xsm') {\n//     return `(min-width: 350px)`;\n//   } else if (bp === 'sm') {\n//     return `(min-width: 600px)`;\n//   } else if (bp === 'md') {\n//     return `(min-width: 960px)`;\n//   } else if (bp === 'lg') {\n//     return `(min-width: 1280px)`;\n//   } else if (bp === 'xl') {\n//     return `(min-width: 1920px)`;\n//   }\n// };\n\nexport const breakpoints = (bp) => {\n  // if (bp === 'xsm') {\n  //   return `(min-width: 350px)`;\n  // } else if (bp === 'sm') {\n  //   return `(min-width: 600px)`;\n  // } else if (bp === 'md') {\n  //   return `(min-width: 960px)`;\n  // } else if (bp === 'lg') {\n  //   return `(min-width: 1280px)`;\n  // } else if (bp === 'xl') {\n  //   return `(min-width: 1920px)`;\n  // }\n\n  return {\n    xsm: `(min-width: ${breakpointsValues().XSM}px)`,\n    sm: `(min-width: ${breakpointsValues().SM}px)`,\n    md: `(min-width: ${breakpointsValues().MD}px)`,\n    lg: `(min-width: ${breakpointsValues().LG}px)`,\n    xl: `(min-width: ${breakpointsValues().XL}px)`,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}